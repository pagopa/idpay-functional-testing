trigger:
  branches:
    include:
      - main

schedules:
  - cron: "0 5 * * *" # Runs every day at 05:00:00 UTC
    displayName: Scheduled every day run
    branches:
      include:
        - main
    always: true

variables:
  # Python version: 3.x
  pythonVersion: '3.x'
  # Folder name of this sub-repository
  working-dir: '.'
  # Project root folder
  projectRoot: $(System.DefaultWorkingDirectory)/$(working-dir)
  selfHostedAgentPool: 'cstar-uat-linux'
  TIME_OUT: 10

pool:
  vmImage: 'ubuntu-22.04'

parameters:
  - name: env
    displayName: Target Environment
    type: string
    default: uat
    values:
      - uat

  - name: tag
    displayName: Target tests tag (use unquoted "all_skip" to run every un-skipped test or "all" to run every test)
    type: string
    default: ''

stages:
  - stage: Functional_tests
    dependsOn: [ ]
    pool:
      name: $(selfHostedAgentPool)
    jobs:
      - job: "Run_scheduled_functional_tests"
        condition: eq('${{ parameters.tag }}', '')
        strategy:
          maxParallel: 2
          matrix:
            onboarding:
              current_tag: 'onboarding'
            transaction:
              current_tag: 'transaction'
        steps:
          - checkout: self
          - script: |
              python3 --version
              pip3 --version
            displayName: "Display Python version"
          - script: |
              python3 --version
              python3 -m pip install --user pipenv
              python3 -m pipenv sync
            displayName: "Install requirements"
          - task: DownloadSecureFile@1
            name: idpay_secrets
            displayName: 'Download IDPay secrets'
            inputs:
              secureFile: '.secrets.yaml'
          - script: |
              python3 -m pipenv run behave --junit --junit-directory "tests/reports/behave" --tags $TAGS
            displayName: 'Run tests with Behave'
            env:
              IDPAY_SECRET_PATH: $(idpay_secrets.secureFilePath)
              IDPAY_TARGET_ENV: ${{ parameters.env }}
              TAGS: '$(current_tag)'
            continueOnError: true
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'tests/reports/behave/*.xml'
              testRunTitle: 'Behave Results'
              searchFolder: $(Build.SourcesDirectory)
              failTaskOnFailedTests: true
            continueOnError: true
      - job: "Run_manual_functional_tests"
        condition: not(eq('${{ parameters.tag }}', ''))
        steps:
          - checkout: self
          - script: |
              python3 --version
              pip3 --version
            displayName: "Display Python version"
          - script: |
              python3 --version
              python3 -m pip install --user pipenv
              python3 -m pipenv sync
            displayName: "Install requirements"
          - task: DownloadSecureFile@1
            name: idpay_secrets
            displayName: 'Download IDPay secrets'
            inputs:
              secureFile: '.secrets.yaml'
          - script: |
              if [ -z "${{ parameters.tag }}" ] || [ "${{ parameters.tag }}" = "all_skip" ]; then
                python3 -m pipenv run behave --junit --junit-directory "tests/reports/behave" --tags "~skip"
              elif [ "${{ parameters.tag }}" = "all" ]; then
                python3 -m pipenv run behave --junit --junit-directory "tests/reports/behave"
              else
                python3 -m pipenv run behave --junit --junit-directory "tests/reports/behave" --tags "${{ parameters.tag }}"
              fi
            displayName: 'Run tests with Behave'
            env:
              IDPAY_SECRET_PATH: $(idpay_secrets.secureFilePath)
              IDPAY_TARGET_ENV: ${{ parameters.env }}
            continueOnError: true
          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'tests/reports/behave/*.xml'
              testRunTitle: 'Behave Results'
              searchFolder: $(Build.SourcesDirectory)
              failTaskOnFailedTests: true
            continueOnError: true
